package com.xll.tensquare.user.Config;

import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;

/**
 * @Name WebSecurityConfig
 * @Description    安全配置类
 * @Auther Yudachi
 * @Craetetime 2019-03-27-19:25
 * @Version 1.0
 **/
@Configuration
@EnableWebSecurity
public class WebSecurityConfig extends WebSecurityConfigurerAdapter {

    @Override
    protected void configure(HttpSecurity http) throws Exception {
        //authorizeRequests() 所有security全注解配置实现的开端，表示开始说明需要的权限
        //需要的权限分两部分，第一部分是拦截路径，第二部分是访问该路径需要的权限。
        //antMatchers() 拦截路径   permitAll()任何权限都可以访问 相当于直接放行
        //anyRequest() 任何请求  authenticated() 认证后才能进行访问
        //.and().csrf().disable(); 固定写法 使csrf拦截失效

        http
                .authorizeRequests()
                .antMatchers("/**").permitAll()
                .anyRequest().authenticated()
                .and().csrf().disable();

    }
}